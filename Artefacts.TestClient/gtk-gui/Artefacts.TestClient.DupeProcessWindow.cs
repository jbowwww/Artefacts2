
// This file has been generated by the GUI designer. Do not modify.
namespace Artefacts.TestClient
{
	public partial class DupeProcessWindow
	{
		private global::Gtk.UIManager UIManager;
		private global::Gtk.Action DupesAction;
		private global::Gtk.Action harddiskAction1;
		private global::Gtk.Action saveAsAction;
		private global::Gtk.Action FileSystemAction;
		private global::Gtk.Action saveAction;
		private global::Gtk.Action DupeListAction;
		private global::Gtk.Action SelectAllAction;
		private global::Gtk.Action SelectNoneAction;
		private global::Gtk.Action InvertSelectionAction;
		private global::Gtk.VBox vbox1;
		private global::Gtk.HBox hbox1;
		private global::Gtk.ScrolledWindow GtkScrolledWindow;
		private global::Gtk.TreeView viewDupes;
		private global::Gtk.HBox hbox2;
		private global::Gtk.ScrolledWindow GtkScrolledWindow1;
		private global::Gtk.TextView txtSelectionSummary;
		private global::Gtk.VBox vbox2;
		private global::Gtk.Button btnMoveTrash;
		private global::Gtk.FileChooserButton btnChooseTrashDir;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget Artefacts.TestClient.DupeProcessWindow
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
			this.DupesAction = new global::Gtk.Action ("DupesAction", global::Mono.Unix.Catalog.GetString ("Dupes"), null, null);
			this.DupesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Dupes");
			w1.Add (this.DupesAction, null);
			this.harddiskAction1 = new global::Gtk.Action ("harddiskAction1", global::Mono.Unix.Catalog.GetString ("Remove Selected"), null, "gtk-harddisk");
			this.harddiskAction1.ShortLabel = global::Mono.Unix.Catalog.GetString ("Remove Selected");
			w1.Add (this.harddiskAction1, null);
			this.saveAsAction = new global::Gtk.Action ("saveAsAction", global::Mono.Unix.Catalog.GetString ("Apply"), null, "gtk-save-as");
			this.saveAsAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Apply");
			w1.Add (this.saveAsAction, null);
			this.FileSystemAction = new global::Gtk.Action ("FileSystemAction", global::Mono.Unix.Catalog.GetString ("File System"), null, null);
			this.FileSystemAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("File System");
			w1.Add (this.FileSystemAction, null);
			this.saveAction = new global::Gtk.Action ("saveAction", global::Mono.Unix.Catalog.GetString ("Apply"), null, "gtk-save");
			this.saveAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Apply");
			w1.Add (this.saveAction, null);
			this.DupeListAction = new global::Gtk.Action ("DupeListAction", global::Mono.Unix.Catalog.GetString ("Dupe List"), null, null);
			this.DupeListAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Dupe List");
			w1.Add (this.DupeListAction, null);
			this.SelectAllAction = new global::Gtk.Action ("SelectAllAction", global::Mono.Unix.Catalog.GetString ("Select all"), null, null);
			this.SelectAllAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Select all");
			w1.Add (this.SelectAllAction, null);
			this.SelectNoneAction = new global::Gtk.Action ("SelectNoneAction", global::Mono.Unix.Catalog.GetString ("Select none"), null, null);
			this.SelectNoneAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Select none");
			w1.Add (this.SelectNoneAction, null);
			this.InvertSelectionAction = new global::Gtk.Action ("InvertSelectionAction", global::Mono.Unix.Catalog.GetString ("Invert Selection"), null, null);
			this.InvertSelectionAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Invert Selection");
			w1.Add (this.InvertSelectionAction, null);
			this.UIManager.InsertActionGroup (w1, 0);
			this.AddAccelGroup (this.UIManager.AccelGroup);
			this.Name = "Artefacts.TestClient.DupeProcessWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("DupeProcessWindow");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			// Container child Artefacts.TestClient.DupeProcessWindow.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			this.vbox1.Spacing = 6;
			// Container child vbox1.Gtk.Box+BoxChild
			this.hbox1 = new global::Gtk.HBox ();
			this.hbox1.Name = "hbox1";
			this.hbox1.Spacing = 6;
			// Container child hbox1.Gtk.Box+BoxChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this.viewDupes = new global::Gtk.TreeView ();
			this.viewDupes.CanFocus = true;
			this.viewDupes.Name = "viewDupes";
			this.GtkScrolledWindow.Add (this.viewDupes);
			this.hbox1.Add (this.GtkScrolledWindow);
			global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.hbox1 [this.GtkScrolledWindow]));
			w3.Position = 0;
			this.vbox1.Add (this.hbox1);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.hbox1]));
			w4.Position = 0;
			// Container child vbox1.Gtk.Box+BoxChild
			this.hbox2 = new global::Gtk.HBox ();
			this.hbox2.HeightRequest = 128;
			this.hbox2.Name = "hbox2";
			this.hbox2.Spacing = 6;
			// Container child hbox2.Gtk.Box+BoxChild
			this.GtkScrolledWindow1 = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow1.Name = "GtkScrolledWindow1";
			this.GtkScrolledWindow1.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow1.Gtk.Container+ContainerChild
			this.txtSelectionSummary = new global::Gtk.TextView ();
			this.txtSelectionSummary.CanFocus = true;
			this.txtSelectionSummary.Name = "txtSelectionSummary";
			this.GtkScrolledWindow1.Add (this.txtSelectionSummary);
			this.hbox2.Add (this.GtkScrolledWindow1);
			global::Gtk.Box.BoxChild w6 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.GtkScrolledWindow1]));
			w6.Position = 0;
			// Container child hbox2.Gtk.Box+BoxChild
			this.vbox2 = new global::Gtk.VBox ();
			this.vbox2.WidthRequest = 132;
			this.vbox2.Name = "vbox2";
			this.vbox2.Spacing = 6;
			// Container child vbox2.Gtk.Box+BoxChild
			this.btnMoveTrash = new global::Gtk.Button ();
			this.btnMoveTrash.CanFocus = true;
			this.btnMoveTrash.Name = "btnMoveTrash";
			this.btnMoveTrash.UseUnderline = true;
			this.btnMoveTrash.Label = global::Mono.Unix.Catalog.GetString ("GtkButton");
			this.vbox2.Add (this.btnMoveTrash);
			global::Gtk.Box.BoxChild w7 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.btnMoveTrash]));
			w7.Position = 0;
			w7.Expand = false;
			w7.Fill = false;
			// Container child vbox2.Gtk.Box+BoxChild
			this.btnChooseTrashDir = new global::Gtk.FileChooserButton (global::Mono.Unix.Catalog.GetString ("Select Trash Folder"), ((global::Gtk.FileChooserAction)(2)));
			this.btnChooseTrashDir.Name = "btnChooseTrashDir";
			this.vbox2.Add (this.btnChooseTrashDir);
			global::Gtk.Box.BoxChild w8 = ((global::Gtk.Box.BoxChild)(this.vbox2 [this.btnChooseTrashDir]));
			w8.Position = 1;
			w8.Expand = false;
			w8.Fill = false;
			this.hbox2.Add (this.vbox2);
			global::Gtk.Box.BoxChild w9 = ((global::Gtk.Box.BoxChild)(this.hbox2 [this.vbox2]));
			w9.Position = 1;
			w9.Expand = false;
			w9.Fill = false;
			this.vbox1.Add (this.hbox2);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.hbox2]));
			w10.Position = 1;
			w10.Expand = false;
			this.Add (this.vbox1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 1096;
			this.DefaultHeight = 406;
			this.Show ();
			this.saveAction.Activated += new global::System.EventHandler (this.OnSaveActionActivated);
			this.SelectAllAction.Activated += new global::System.EventHandler (this.OnSelectAllActionActivated);
			this.SelectNoneAction.Activated += new global::System.EventHandler (this.OnSelectNoneActionActivated);
			this.InvertSelectionAction.Activated += new global::System.EventHandler (this.OnInvertSelectionActionActivated);
			this.viewDupes.SelectCursorRow += new global::Gtk.SelectCursorRowHandler (this.OnViewDupesSelectCursorRow);
			this.btnMoveTrash.Clicked += new global::System.EventHandler (this.OnBtnMoveTrashClicked);
		}
	}
}
